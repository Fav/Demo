<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Product" 
    xmlns="http://ibatis.apache.org/mapping"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

	<alias>
		<!--类的别名-->
		<typeAlias alias="Product" type="ProjectElu.PRODUCT,ProjectElu"/>
	</alias>

	<resultMaps>
		<!--Product类与db表的映射-->
		<resultMap id="SelectAllResult" class="Product">
			<result property="ID" column="ID"/>
			<result property="NAME" column="NAME"/>
			<result property="UNIT" column="UNIT" />
			<result property="DEPARTMENT" column="DEPARTMENT"  />
			<result property="INSTRUMENT" column="INSTRUMENT"  />
			<result property="CONTACTS" column="CONTACTS"  />
			<result property="PHONE" column="PHONE"  />			
			<result property="STARTTIME" column="STARTTIME" />
		</resultMap>
	</resultMaps>

	<statements>

		<!--查询所有记录-->
		<select id="PRODUCT.SelectAll" resultMap="SelectAllResult">
			<![CDATA[SELECT ID,NAME,UNIT,DEPARTMENT,INSTRUMENT,CONTACTS,PHONE,STARTTIME FROM Product]]>
		</select>

		<!--查询单条记录-->
		<select id="PRODUCT.SelectByID" parameterClass="string" resultMap="SelectAllResult" extends="PRODUCT.SelectAll">
			<![CDATA[ where ID = #value#  ]]>
		</select>

		<!--插入新记录-->
		<insert id="PRODUCT.Insert" parameterClass="Product">	
			<!--oracle sequence的示例用法
			<selectKey property="ID" type="pre" resultClass="int">
				select SQ_Product.nextval as ID from dual
			</selectKey>
      -->
			<![CDATA[INSERT into Product(ID,UNIT,NAME,DEPARTMENT,INSTRUMENT,CONTACTS,PHONE,STARTTIME)
			VALUES(#ID#,#UNIT#, #NAME# , #DEPARTMENT# ,#INSTRUMENT# ,#CONTACTS# ,#PHONE# , #STARTTIME#)]]>
		</insert>

		<!--更新单条记录-->
		<update id="PRODUCT.Update" parameterClass="Product">
			<![CDATA[Update Product 
			SET 
			NAME=#NAME#,
			UNIT=#UNIT#,			
			DEPARTMENT=#DEPARTMENT#,
			INSTRUMENT=#INSTRUMENT#,
			CONTACTS=#CONTACTS#,
			PHONE=#PHONE#,
			STARTTIME=#STARTTIME#
			Where ID=#ID#]]>
		</update>

    <sql id="PRODUCT.allColumn">
      ID,NAME,UNIT,DEPARTMENT,INSTRUMENT,CONTACTS,PHONE,STARTTIME
    </sql>

    <!--根据主键删除单条记录-->
		<delete id="PRODUCT.DeleteById" parameterClass="string">
			<![CDATA[Delete From Product Where ID=#value#]]>
		</delete>

    <!-- query domain where condition-->
    <sql id="PRODUCT.dynamicWhere">
      <isNotNull prepend="and" property="ID">
        ID like '%$ID$%'
      </isNotNull>
      <isNotNull prepend="and" property="NAME">
        NAME like '%$NAME$%'
      </isNotNull>
      <isNotNull prepend="and" property="UNIT">
        UNIT like '%$UNIT$%'
      </isNotNull>
      <isNotNull prepend="and" property="DEPARTMENT">
        DEPARTMENT like '%$DEPARTMENT$%'
      </isNotNull>
      <isNotNull prepend="and" property="INSTRUMENT">
        INSTRUMENT like '%$INSTRUMENT$%'
      </isNotNull>
      <isNotNull prepend="and" property="CONTACTS">
        CONTACTS like '%$CONTACTS$%'
      </isNotNull>
      <isNotNull prepend="and" property="PHONE">
        PHONE like '%$PHONE$%'
      </isNotNull>
      <isNotNull prepend="and" property="STARTTIME">
        STARTTIME like '%$STARTTIME$%'
      </isNotNull>

    </sql>

    <sql id="PRODUCT.dynamicScope">
      <isNotNull prepend="and" property="scope.ID">
        ID ='$scope.ID'
      </isNotNull>
      <isNotNull prepend="and" property="scope.NAME">
        NAME ='$scope.NAME'
      </isNotNull>
      <isNotNull prepend="and" property="scope.UNIT">
        UNIT ='$scope.UNIT'
      </isNotNull>
      <isNotNull prepend="and" property="scope.DEPARTMENT">
        DEPARTMENT ='$scope.DEPARTMENT'
      </isNotNull>
      <isNotNull prepend="and" property="scope.INSTRUMENT">
        INSTRUMENT ='$scope.INSTRUMENT'
      </isNotNull>
      <isNotNull prepend="and" property="scope.CONTACTS">
        CONTACTS ='$scope.CONTACTS'
      </isNotNull>
      <isNotNull prepend="and" property="scope.PHONE">
        PHONE ='$scope.PHONE'
      </isNotNull>
      <isNotNull prepend="and" property="scope.STARTTIME">
        STARTTIME ='$scope.STARTTIME'
      </isNotNull>

    </sql>

    <!-- query domain-->
    <select id="PRODUCT.query_list" resultMap="SelectAllResult" parameterClass="System.Collections.IDictionary">
      select  <include refid="PRODUCT.allColumn" />
      from PRODUCT
      <dynamic prepend="where">
        <include refid="PRODUCT.dynamicWhere" />
        <include refid="PRODUCT.dynamicScope" />
      </dynamic>
    </select>

    <select id="PRODUCT.query_cnt" resultClass="int" parameterClass="System.Collections.IDictionary">
      select count(*) 
      from PRODUCT
      <dynamic prepend="where">
        <include refid="PRODUCT.dynamicWhere" />
        <include refid="PRODUCT.dynamicScope" />
      </dynamic>
    </select>
	</statements>

</sqlMap>

